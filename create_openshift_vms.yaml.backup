---
- name: Create OpenShift Master VMs
  hosts: localhost
  gather_facts: true
  vars:
    vm_name_prefix: "{{ ocp_master_vm_name }}"
    memory: "{{ ocp_master_vm_memory }}"
    number_of_vms: "{{ ocp_master_vm_count }}"
    vm_tag: "{{ ocp_master_vm_tag }}"
    vm_dns_domain: "{{ ocp_master_vm_dns_domain }}"
    is_stateless: False
    vm_disks: "{{ ocp_master_disks }}"
    node_role: ""
  tasks:
  - name: include variables
    include_vars: myvars.yaml

  - import_tasks: installtfp.yaml

  - name: configure dnsmasq
    include_tasks: configurednsmasq.yaml

  - name: Login to RHV
    ovirt_auth:
      url: "{{ ovirt_url }}"
      username: "{{ ovirt_username }}"
      password: "{{ ovirt_password }}"
      insecure: true

  - name: create bootstrap vm
    import_tasks: create_ovirt_vms.yaml
    vars:
      vm_name_prefix: bootstrap
      number_of_vms: 1

  - name: fact for ips
    set_fact:
      master_ip_addresses: "{{ master_ips.split(',') }}"
      worker_ip_addresses: "{{ worker_ips.split(',') }}"
      bootstrap_ip_addresses: "{{ bootstrap_ip.split(',') }}"

  - name: update host file for bootstrap
    lineinfile:
      path: /etc/hosts
      regexp: "bootstrap"
      line: "{{ bootstrap_ip_addresses[0] }}    bootstrap1 bootstrap1.{{ cluster_name }}.{{ domain_name }}"
   
  - name: update host file for masters
    lineinfile:
      path: /etc/hosts
      regexp: "{{ vm_master_name_prefix }}{{ item }}"
      line: "{{master_ip_addresses[ item | int-1 ]}} {{ vm_master_name_prefix }}{{ item }} {{ vm_master_name_prefix }}{{ item }}.{{ cluster_name }}.{{ domain_name }}"
    with_sequence: count={{ ocp_master_vm_count }}

  - name: update host file for workers
    lineinfile:
      path: /etc/hosts
      regexp: "{{ vm_worker_name_prefix }}{{ item }}"
      line: "{{worker_ip_addresses[ item | int-1 ]}} {{ vm_worker_name_prefix }}{{ item }} {{ vm_worker_name_prefix }}{{ item }}.{{ cluster_name }}.{{ domain_name }}"
    with_sequence: count={{ ocp_worker_vm_count }}
# dd
#
#  - name: Set node role to compute
#    set_fact:
#      node_role: master

  - name: create master vms
    import_tasks: create_ovirt_vms.yaml 
    vars:
      vm_name_prefix: "{{ vm_master_name_prefix }}"
      number_of_vms: "{{ ocp_master_vm_count }}"
      node_role: master

  - name: Set node role to worker
    set_fact:
      node_role: worker

  - name: create worker vms
    import_tasks: create_ovirt_vms.yaml
    vars:
      vm_name_prefix: "{{ vm_worker_name_prefix }}"
      number_of_vms: "{{ ocp_worker_vm_count }}"
  
  - name: install haproxy
    include_tasks: haproxy.yaml

  - include_tasks: update_pxeboot.yaml 
    vars:
      vm_name: bootstrap1
      ign_type: bootstrap

  - include_tasks: update_pxeboot.yaml
    vars:
      vm_name: "{{ vm_master_name_prefix }}{{ idx }}"
      ign_type: master
    with_sequence: count={{ ocp_master_vm_count }}
    loop_control:
      loop_var: idx

  - include_tasks: update_pxeboot.yaml 
    vars:
      vm_name: "{{ vm_worker_name_prefix }}{{ idx }}"
      ign_type: worker
    with_sequence: count={{ ocp_worker_vm_count }}
    loop_control:
      loop_var: idx
